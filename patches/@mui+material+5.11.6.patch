diff --git a/node_modules/@mui/material/IconButton/IconButton.js b/node_modules/@mui/material/IconButton/IconButton.js
index 7f076b1..192bf38 100644
--- a/node_modules/@mui/material/IconButton/IconButton.js
+++ b/node_modules/@mui/material/IconButton/IconButton.js
@@ -142,10 +142,10 @@ process.env.NODE_ENV !== "production" ? IconButton.propTypes /* remove-proptypes
    * The icon to display.
    */
   children: chainPropTypes(PropTypes.node, props => {
-    const found = React.Children.toArray(props.children).some(child => /*#__PURE__*/React.isValidElement(child) && child.props.onClick);
-    if (found) {
-      return new Error(['MUI: You are providing an onClick event listener to a child of a button element.', 'Prefer applying it to the IconButton directly.', 'This guarantees that the whole <button> will be responsive to click events.'].join('\n'));
-    }
+    // const found = React.Children.toArray(props.children).some(child => /*#__PURE__*/React.isValidElement(child) && child.props.onClick);
+    // if (found) {
+    //   return new Error(['MUI: You are providing an onClick event listener to a child of a button element.', 'Prefer applying it to the IconButton directly.', 'This guarantees that the whole <button> will be responsive to click events.'].join('\n'));
+    // }
     return null;
   }),
   /**
diff --git a/node_modules/@mui/material/node/IconButton/IconButton.js b/node_modules/@mui/material/node/IconButton/IconButton.js
index ba0f670..88f680e 100644
--- a/node_modules/@mui/material/node/IconButton/IconButton.js
+++ b/node_modules/@mui/material/node/IconButton/IconButton.js
@@ -151,10 +151,10 @@ process.env.NODE_ENV !== "production" ? IconButton.propTypes /* remove-proptypes
    * The icon to display.
    */
   children: (0, _utils.chainPropTypes)(_propTypes.default.node, props => {
-    const found = React.Children.toArray(props.children).some(child => /*#__PURE__*/React.isValidElement(child) && child.props.onClick);
-    if (found) {
-      return new Error(['MUI: You are providing an onClick event listener to a child of a button element.', 'Prefer applying it to the IconButton directly.', 'This guarantees that the whole <button> will be responsive to click events.'].join('\n'));
-    }
+    // const found = React.Children.toArray(props.children).some(child => /*#__PURE__*/React.isValidElement(child) && child.props.onClick);
+    // if (found) {
+    //   return new Error(['MUI: You are providing an onClick event listener to a child of a button element.', 'Prefer applying it to the IconButton directly.', 'This guarantees that the whole <button> will be responsive to click events.'].join('\n'));
+    // }
     return null;
   }),
   /**
